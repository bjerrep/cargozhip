{
    "config": {
        "compression": "zip"
    },

    "inherit_example_test_0_base": {
        "include_dirs": ["folder_1", "folder_1/folder_1_1"]
    },

    "inherit_example_test_0_direct": {
        "inherit": ["inherit_example_test_0_base"],
        "include_files": [],
        "exclude_dirs": ["folder_1/**"]
    },

    "test_100": {
        "inherit": ["inherit_example_test_0_direct"],
        "exclude_files": ["**/data*"],
        "title": "testing section inheritance",
        "expected": [
            "folder_1/file_1"
        ]
    },

    "test_200": {
        "include_files": ["**/file*"],
        "exclude_files": [],
        "include_dirs": [],
        "exclude_dirs": [],
        "title": "All files with name starting with 'file' found anywhere",
        "expected":[
            "file",
            "folder_1/file_1",
            "folder_1/folder_1_1/file_1_1_1",
            "folder_1/folder_1_1/folder_1_1_1/file_1_1_1_1",
            "folder_1/folder_1_2/file_1_2_1",
            "folder_1/folder_1_3/file_1_3_1",
            "folder_2/file_2",
            "symlinks/file",
            "symlinks/folder_2/file_2"
        ]
    },

    "test_201": {
        "include_files": [],
        "exclude_files": [],
        "include_dirs": ["folder_1/*"],
        "exclude_dirs": [],
        "title": "all files in all subdirectories below folder_1",
        "expected":[
            "folder_1/folder_1_1/data_1_1_1",
            "folder_1/folder_1_1/file_1_1_1",
            "folder_1/folder_1_2/file_1_2_1",
            "folder_1/folder_1_3/file_1_3_1"
        ]
    },

    "test_202": {
        "include_files": ["folder_1/*"],
        "exclude_files": [],
        "include_dirs": [],
        "exclude_dirs": [],
        "title": "all files located in folder_1",
        "expected":[
            "folder_1/data_1",
            "folder_1/file_1"
        ]
    },

    "test_203": {
        "include_files": ["folder_1/*", "folder_1/folder_1_1/*"],
        "exclude_files": ["**/folder_1_1/data*"],
        "include_dirs": [],
        "exclude_dirs": [],
        "title": "all files in two subfolders but skip data* files in folder_1_1",
        "expected":[
            "folder_1/data_1",
            "folder_1/file_1",
            "folder_1/folder_1_1/file_1_1_1"]
    },

    "test_204": {
        "include_files": ["folder_1/**"],
        "exclude_files": [],
        "include_dirs": [],
        "exclude_dirs": [],
        "title": "everything in a subfolder recursively",
        "expected":[
            "folder_1/data_1",
            "folder_1/file_1",
            "folder_1/folder_1_1/data_1_1_1",
            "folder_1/folder_1_1/file_1_1_1",
            "folder_1/folder_1_1/folder_1_1_1/data_1_1_1_1",
            "folder_1/folder_1_1/folder_1_1_1/file_1_1_1_1",
            "folder_1/folder_1_2/file_1_2_1",
            "folder_1/folder_1_3/file_1_3_1"
        ]
    },

    "test_205": {
        "include_files": ["**"],
        "exclude_files": ["**/data**"],
        "include_dirs": [],
        "exclude_dirs": ["symlinks"],
        "title": "all files in subfolders recursively excluding data files",
        "expected":[
            "cargozhip.json",
            "file",
            "folder_1/file_1",
            "folder_1/folder_1_1/file_1_1_1",
            "folder_1/folder_1_1/folder_1_1_1/file_1_1_1_1",
            "folder_1/folder_1_2/file_1_2_1",
            "folder_1/folder_1_3/file_1_3_1",
            "folder_2/file_2"
        ]
    },

    "test_300_symlinks": {
        "include_files": ["symlinks/**"],
        "include_dirs": ["folder_2"],
        "title": "symlinks A",
        "expected":[
            "folder_2/file_2",
            "symlinks/file",
            "symlinks/folder_2",
            "symlinks/folder_2/file_2",
            "symlinks/libedip.so",
            "symlinks/libedip.so.1",
            "symlinks/libedip.so.1.0",
            "symlinks/libedip.so.1.0.0"
        ]
    },

    "test_301_symlinks": {
        "include_files": ["!libedip", "!symlinks/file"],
        "title": "symlinks B",
        "expected":[
            "symlinks/file",
            "symlinks/libedip.so",
            "symlinks/libedip.so.1",
            "symlinks/libedip.so.1.0",
            "symlinks/libedip.so.1.0.0"
        ]
    },

    "test_400_relocate_plain_files_stripping_path_@": {
        "include_files_2": ["@dest_files", "folder_1/folder_1_1/**"],
        "title": "relocating files with @ operator",
        "expected": [
            "dest_files/data_1_1_1",
            "dest_files/file_1_1_1",
            "dest_files/data_1_1_1_1",
            "dest_files/file_1_1_1_1"
        ]
    },
    
    "test_410_relocate_plain_files_including_full_path_@@": {
        "include_files_2": ["@@dest_path", "folder_1/folder_1_1/**"],
        "title": "relocating files including their original path with @@ operator",
        "expected": [
            "dest_path/folder_1/folder_1_1/data_1_1_1",
            "dest_path/folder_1/folder_1_1/file_1_1_1",
            "dest_path/folder_1/folder_1_1/folder_1_1_1/data_1_1_1_1",
            "dest_path/folder_1/folder_1_1/folder_1_1_1/file_1_1_1_1"
        ]
    },

    "test_420_relocate_plain_files_including_sub_path_@@@": {
        "include_files_2": ["@@@dest_path", "folder_1/folder_1_1/**"],
        "title": "relocating files including only subpaths with @@@ operator",
        "expected": [
            "dest_path/data_1_1_1",
            "dest_path/file_1_1_1",
            "dest_path/folder_1_1_1/data_1_1_1_1",
            "dest_path/folder_1_1_1/file_1_1_1_1"
        ]
    },

    "test_430_relocate_plain_files_including_sub_path_dir_@@@": {
        "include_dirs": ["@@@dest_path", "folder_1/**"],
        "title": "relocating files including only subpaths with @@@ operator",
        "expected": [
            "folder_1/folder_1_1/data_1_1_1",
            "folder_1/folder_1_1/file_1_1_1",
            "folder_1/folder_1_1/folder_1_1_1/data_1_1_1_1",
            "folder_1/folder_1_1/folder_1_1_1/file_1_1_1_1",
            "folder_1/folder_1_2/file_1_2_1",
            "folder_1/folder_1_3/file_1_3_1"
        ]
    },

    "test_440_copy_symlinks_with_dest": {
        "include_files": ["file", "@lib", "symlinks/lib*", "@misc", "symlinks/file"],
        "include_dirs": ["symlinks/folder_2", "folder_2"],
        "title": "symlinks with new destination",
        "expected": [
            "file",
            "folder_2/file_2",
            "symlinks/folder_2/file_2",
            "lib/libedip.so",
            "lib/libedip.so.1",
            "lib/libedip.so.1.0",
            "lib/libedip.so.1.0.0",
            "misc/file"
        ]
    },
    
    "exception_100_relocate_plain_files": {
        "include_files_1": ["@dest", "!file"],
        "title": "trying to get 2 files to end up as dest/file which is nonsensical"
    },
    
    "exception_101_recursive_inherit": {
        "inherit": ["exception_1_recursive_inherit"],
        "title": "inherit recursion failure"
    }
}
